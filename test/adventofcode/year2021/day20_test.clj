(ns adventofcode.year2021.day20-test
  (:require [clojure.test :refer :all]
            [adventofcode.year2021.day20 :as day]
            [adventofcode.support.test :as test]))

(def example-input
  (day/parse-input

#..#.
#....
##..#
..#..
..###"))

(def example-input2
  (day/parse-input

#..#.
#....
##..#
..#..
..###"))

(deftest get-algorithm-index
  (is (= (day/get-algorithm-index example-input 1 1) 34)))

(deftest enhance
  (is (= (day/enhance example-input)
         (assoc example-input
           :width 7
           :height 7
           :image [[0 1 1 0 1 1 0]
                   [1 0 0 1 0 1 0]
                   [1 1 0 1 0 0 1]
                   [1 1 1 1 0 0 1]
                   [0 1 0 0 1 1 0]
                   [0 0 1 1 0 0 1]
                   [0 0 0 1 0 1 0]])))
  (is (= (day/enhance example-input2)
         (assoc example-input2
           :width 7
           :height 7
           :default 1
           :image [[0 1 1 0 1 1 1]
                   [1 0 0 1 0 1 1]
                   [1 1 0 1 0 0 1]
                   [1 1 1 1 0 0 1]
                   [0 1 0 0 1 1 0]
                   [1 1 1 1 0 0 1]
                   [1 1 0 1 0 1 0]])))
  (is (= (day/enhance (day/expand example-input2 1))
         (assoc example-input2
           :width 9
           :height 9
           :default 1
           :image [[1 1 1 1 1 1 1 1 1]
                   [1 0 1 1 0 1 1 1 1]
                   [1 1 0 0 1 0 1 1 1]
                   [1 1 1 0 1 0 0 1 1]
                   [1 1 1 1 1 0 0 1 1]
                   [1 0 1 0 0 1 1 0 1]
                   [1 1 1 1 1 0 0 1 1]
                   [1 1 1 0 1 0 1 0 1]
                   [1 1 1 1 1 1 1 1 1]]))))

(deftest part1-example
  (is (= (day/part1 example-input) 35)))

(deftest part2-example
  (is (= (day/part2 example-input) 3351)))

(deftest solution
  (test/test-puzzle 2021 20 5065 14790))
